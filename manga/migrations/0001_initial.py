# Generated by Django 2.2.1 on 2019-08-27 19:53

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '__first__'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AlternateName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(blank=True, max_length=100)),
                ('characters', models.CharField(blank=True, max_length=100)),
                ('alternate_name', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author_name', models.TextField()),
                ('author_status', models.TextField(choices=[('Active', 'Active'), ('Unknown', 'Unknown'), ('On Hiatus', 'On Hiatus'), ('Retired', 'Retired'), ('Deceased', 'Deceased')])),
                ('author_url', models.URLField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chapter_number', models.CharField(default='0', max_length=10)),
                ('chapter_name', models.TextField(blank=True)),
                ('views', models.IntegerField(default=0)),
                ('url', models.URLField(default='https://mangahive.com/manga/notices/resource_pending_authorization')),
                ('added_on', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExternalResource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resource_type', models.CharField(choices=[('Scrapable Web Page', 'Scrapable Web Page'), ('Static Resource', 'Static Resource')], default='Static Resource Locator', max_length=100)),
                ('resource_status', models.CharField(choices=[('Untested', 'Untested'), ('Verified', 'Verified'), ('Broken', 'Broken')], default='Untested', max_length=100)),
                ('resource_short_name', models.TextField(blank=True)),
                ('url_expression', models.URLField()),
                ('resource_processing_script', models.TextField(blank='True')),
            ],
        ),
        migrations.CreateModel(
            name='Manga',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manga_name', models.TextField()),
                ('manga_year', models.IntegerField(blank=True, default=0, null=True)),
                ('manga_status', models.CharField(choices=[('Ongoing', 'Ongoing'), ('Completed', 'Completed')], default='Ongoing', max_length=100)),
                ('original_publisher', models.CharField(blank=True, default='', max_length=300)),
                ('banner_image_url', models.URLField(blank=True)),
                ('views', models.IntegerField(default=0)),
                ('description', models.TextField(default="Doesn't have one yet. Feel free to add it.")),
                ('added_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('alternate_names', models.ManyToManyField(blank=True, to='manga.AlternateName')),
                ('chapter_sources', models.ManyToManyField(blank=True, default='', to='manga.ExternalResource')),
                ('manga_author', models.ManyToManyField(blank=True, default='', to='manga.Author')),
            ],
        ),
        migrations.CreateModel(
            name='TagType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Translator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('translator_name', models.TextField()),
                ('translator_status', models.TextField(choices=[('Active', 'Active'), ('Unknown', 'Unknown'), ('On Hiatus', 'On Hiatus'), ('Disbanded', 'Disbanded')])),
                ('translator_url', models.URLField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Volume',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('volume_number', models.IntegerField(default=-1)),
                ('volume_name', models.TextField(default=-1)),
                ('owning_manga', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='manga.Manga')),
                ('volume_alternate_names', models.ManyToManyField(blank=True, to='manga.AlternateName')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_name', models.CharField(max_length=200)),
                ('subscribers', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
                ('tag_type', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='manga.TagType')),
            ],
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page_number', models.IntegerField(default=0)),
                ('source_image_url', models.URLField(default='https://mangahive.com/manga/static/assets/stubs/not_found.jpg')),
                ('chapter', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='manga.Chapter')),
                ('external_sources', models.ManyToManyField(blank=True, to='manga.ExternalResource')),
            ],
        ),
        migrations.AddField(
            model_name='manga',
            name='manga_translator',
            field=models.ManyToManyField(blank=True, default='', to='manga.Translator'),
        ),
        migrations.AddField(
            model_name='manga',
            name='ratings',
            field=models.ManyToManyField(blank=True, to='users.UserRating'),
        ),
        migrations.AddField(
            model_name='manga',
            name='subscribers',
            field=models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='manga',
            name='tags',
            field=models.ManyToManyField(blank=True, to='manga.Tag'),
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_name', models.TextField()),
                ('event_type', models.CharField(choices=[('New Chapter Release', 'New Chapter Release'), ('Blog Article Release', 'Blog Article Release'), ('New Manga Release', 'New Manga Release'), ('Merchandise Release', 'Merchandise Release'), ('Site Event', 'Site Event')], default='New Chapter Release', max_length=100)),
                ('event_description', models.TextField()),
                ('event_banner_image_url', models.URLField(blank=True, null=True)),
                ('event_url', models.URLField()),
                ('affected_manga', models.ManyToManyField(blank=True, to='manga.Manga')),
                ('affected_tags', models.ManyToManyField(blank=True, to='manga.Tag')),
                ('affected_users', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='chapter',
            name='external_sources',
            field=models.ManyToManyField(blank=True, to='manga.ExternalResource'),
        ),
        migrations.AddField(
            model_name='chapter',
            name='manga',
            field=models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='manga.Manga'),
        ),
        migrations.AddField(
            model_name='chapter',
            name='uploader',
            field=models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='chapter',
            name='volume',
            field=models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='manga.Volume'),
        ),
        migrations.CreateModel(
            name='Bookmark',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='manga.Page')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
